// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: telemetry.proto

package telemetry;

/**
 * Protobuf type {@code helloworld.Telemetry}
 */
public  final class Telemetry extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:helloworld.Telemetry)
    TelemetryOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Telemetry.newBuilder() to construct.
  private Telemetry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Telemetry() {
    nodeIdStr_ = "";
    subscriptionIdStr_ = "";
    sensorPath_ = "";
    collectionId_ = 0L;
    collectionStartTime_ = 0L;
    msgTimestamp_ = 0L;
    collectionEndTime_ = 0L;
    currentPeriod_ = 0;
    exceptDesc_ = "";
    productName_ = "";
    encoding_ = 0;
    dataStr_ = "";
  }
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Telemetry(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            nodeIdStr_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            subscriptionIdStr_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            sensorPath_ = s;
            break;
          }
          case 32: {

            collectionId_ = input.readUInt64();
            break;
          }
          case 40: {

            collectionStartTime_ = input.readUInt64();
            break;
          }
          case 48: {

            msgTimestamp_ = input.readUInt64();
            break;
          }
          case 58: {
            telemetry.TelemetryGPBTable.Builder subBuilder = null;
            if (dataGpb_ != null) {
              subBuilder = dataGpb_.toBuilder();
            }
            dataGpb_ = input.readMessage(telemetry.TelemetryGPBTable.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dataGpb_);
              dataGpb_ = subBuilder.buildPartial();
            }

            break;
          }
          case 64: {

            collectionEndTime_ = input.readUInt64();
            break;
          }
          case 72: {

            currentPeriod_ = input.readUInt32();
            break;
          }
          case 82: {
            java.lang.String s = input.readStringRequireUtf8();

            exceptDesc_ = s;
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            productName_ = s;
            break;
          }
          case 96: {
            int rawValue = input.readEnum();

            encoding_ = rawValue;
            break;
          }
          case 114: {
            java.lang.String s = input.readStringRequireUtf8();

            dataStr_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return telemetry.TelemetryProto.internal_static_helloworld_Telemetry_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return telemetry.TelemetryProto.internal_static_helloworld_Telemetry_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            telemetry.Telemetry.class, telemetry.Telemetry.Builder.class);
  }

  /**
   * Protobuf enum {@code helloworld.Telemetry.Encoding}
   */
  public enum Encoding
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *表示GPB数据编码格式。
     * </pre>
     *
     * <code>Encoding_GPB = 0;</code>
     */
    Encoding_GPB(0),
    /**
     * <pre>
     *表示JSON数据编码格式。
     * </pre>
     *
     * <code>Encoding_JSON = 1;</code>
     */
    Encoding_JSON(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *表示GPB数据编码格式。
     * </pre>
     *
     * <code>Encoding_GPB = 0;</code>
     */
    public static final int Encoding_GPB_VALUE = 0;
    /**
     * <pre>
     *表示JSON数据编码格式。
     * </pre>
     *
     * <code>Encoding_JSON = 1;</code>
     */
    public static final int Encoding_JSON_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Encoding valueOf(int value) {
      return forNumber(value);
    }

    public static Encoding forNumber(int value) {
      switch (value) {
        case 0: return Encoding_GPB;
        case 1: return Encoding_JSON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Encoding>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Encoding> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Encoding>() {
            public Encoding findValueByNumber(int number) {
              return Encoding.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return telemetry.Telemetry.getDescriptor().getEnumTypes().get(0);
    }

    private static final Encoding[] VALUES = values();

    public static Encoding valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Encoding(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:helloworld.Telemetry.Encoding)
  }

  public static final int NODE_ID_STR_FIELD_NUMBER = 1;
  private volatile java.lang.Object nodeIdStr_;
  /**
   * <pre>
   *Telemetry消息结构定义。
   * </pre>
   *
   * <code>string node_id_str = 1;</code>
   */
  public java.lang.String getNodeIdStr() {
    java.lang.Object ref = nodeIdStr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nodeIdStr_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *Telemetry消息结构定义。
   * </pre>
   *
   * <code>string node_id_str = 1;</code>
   */
  public com.google.protobuf.ByteString
      getNodeIdStrBytes() {
    java.lang.Object ref = nodeIdStr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nodeIdStr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SUBSCRIPTION_ID_STR_FIELD_NUMBER = 2;
  private volatile java.lang.Object subscriptionIdStr_;
  /**
   * <pre>
   *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
   * </pre>
   *
   * <code>string subscription_id_str = 2;</code>
   */
  public java.lang.String getSubscriptionIdStr() {
    java.lang.Object ref = subscriptionIdStr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subscriptionIdStr_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
   * </pre>
   *
   * <code>string subscription_id_str = 2;</code>
   */
  public com.google.protobuf.ByteString
      getSubscriptionIdStrBytes() {
    java.lang.Object ref = subscriptionIdStr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      subscriptionIdStr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SENSOR_PATH_FIELD_NUMBER = 3;
  private volatile java.lang.Object sensorPath_;
  /**
   * <pre>
   *订阅路径，GPB编码时编码为3。
   * </pre>
   *
   * <code>string sensor_path = 3;</code>
   */
  public java.lang.String getSensorPath() {
    java.lang.Object ref = sensorPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sensorPath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *订阅路径，GPB编码时编码为3。
   * </pre>
   *
   * <code>string sensor_path = 3;</code>
   */
  public com.google.protobuf.ByteString
      getSensorPathBytes() {
    java.lang.Object ref = sensorPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sensorPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLLECTION_ID_FIELD_NUMBER = 4;
  private long collectionId_;
  /**
   * <pre>
   *标识采样轮次，GPB编码时编码为4。
   * </pre>
   *
   * <code>uint64 collection_id = 4;</code>
   */
  public long getCollectionId() {
    return collectionId_;
  }

  public static final int COLLECTION_START_TIME_FIELD_NUMBER = 5;
  private long collectionStartTime_;
  /**
   * <pre>
   *标识采样轮次开始时间，GPB编码时编码为5。
   * </pre>
   *
   * <code>uint64 collection_start_time = 5;</code>
   */
  public long getCollectionStartTime() {
    return collectionStartTime_;
  }

  public static final int MSG_TIMESTAMP_FIELD_NUMBER = 6;
  private long msgTimestamp_;
  /**
   * <pre>
   *生成本消息的时间戳，GPB编码时编码为6。
   * </pre>
   *
   * <code>uint64 msg_timestamp = 6;</code>
   */
  public long getMsgTimestamp() {
    return msgTimestamp_;
  }

  public static final int DATA_GPB_FIELD_NUMBER = 7;
  private telemetry.TelemetryGPBTable dataGpb_;
  /**
   * <pre>
   *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
   * </pre>
   *
   * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
   */
  public boolean hasDataGpb() {
    return dataGpb_ != null;
  }
  /**
   * <pre>
   *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
   * </pre>
   *
   * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
   */
  public telemetry.TelemetryGPBTable getDataGpb() {
    return dataGpb_ == null ? telemetry.TelemetryGPBTable.getDefaultInstance() : dataGpb_;
  }
  /**
   * <pre>
   *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
   * </pre>
   *
   * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
   */
  public telemetry.TelemetryGPBTableOrBuilder getDataGpbOrBuilder() {
    return getDataGpb();
  }

  public static final int COLLECTION_END_TIME_FIELD_NUMBER = 8;
  private long collectionEndTime_;
  /**
   * <pre>
   *标识采样轮次结束时间，GPB编码时编码为8。
   * </pre>
   *
   * <code>uint64 collection_end_time = 8;</code>
   */
  public long getCollectionEndTime() {
    return collectionEndTime_;
  }

  public static final int CURRENT_PERIOD_FIELD_NUMBER = 9;
  private int currentPeriod_;
  /**
   * <pre>
   *采样精度，单位是毫秒，GPB编码时编码为9。
   * </pre>
   *
   * <code>uint32 current_period = 9;</code>
   */
  public int getCurrentPeriod() {
    return currentPeriod_;
  }

  public static final int EXCEPT_DESC_FIELD_NUMBER = 10;
  private volatile java.lang.Object exceptDesc_;
  /**
   * <pre>
   *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
   * </pre>
   *
   * <code>string except_desc = 10;</code>
   */
  public java.lang.String getExceptDesc() {
    java.lang.Object ref = exceptDesc_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      exceptDesc_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
   * </pre>
   *
   * <code>string except_desc = 10;</code>
   */
  public com.google.protobuf.ByteString
      getExceptDescBytes() {
    java.lang.Object ref = exceptDesc_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      exceptDesc_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRODUCT_NAME_FIELD_NUMBER = 11;
  private volatile java.lang.Object productName_;
  /**
   * <pre>
   *产品名称。
   * </pre>
   *
   * <code>string product_name = 11;</code>
   */
  public java.lang.String getProductName() {
    java.lang.Object ref = productName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      productName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *产品名称。
   * </pre>
   *
   * <code>string product_name = 11;</code>
   */
  public com.google.protobuf.ByteString
      getProductNameBytes() {
    java.lang.Object ref = productName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      productName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENCODING_FIELD_NUMBER = 12;
  private int encoding_;
  /**
   * <pre>
   *数据编码格式。为GPB时，data_gpb字段有效，否则data_str字段有效。
   * </pre>
   *
   * <code>.helloworld.Telemetry.Encoding encoding = 12;</code>
   */
  public int getEncodingValue() {
    return encoding_;
  }
  /**
   * <pre>
   *数据编码格式。为GPB时，data_gpb字段有效，否则data_str字段有效。
   * </pre>
   *
   * <code>.helloworld.Telemetry.Encoding encoding = 12;</code>
   */
  public telemetry.Telemetry.Encoding getEncoding() {
    telemetry.Telemetry.Encoding result = telemetry.Telemetry.Encoding.valueOf(encoding_);
    return result == null ? telemetry.Telemetry.Encoding.UNRECOGNIZED : result;
  }

  public static final int DATA_STR_FIELD_NUMBER = 14;
  private volatile java.lang.Object dataStr_;
  /**
   * <pre>
   * 数据编码非GPB时有效，否则为空。
   * </pre>
   *
   * <code>string data_str = 14;</code>
   */
  public java.lang.String getDataStr() {
    java.lang.Object ref = dataStr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      dataStr_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 数据编码非GPB时有效，否则为空。
   * </pre>
   *
   * <code>string data_str = 14;</code>
   */
  public com.google.protobuf.ByteString
      getDataStrBytes() {
    java.lang.Object ref = dataStr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      dataStr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNodeIdStrBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeIdStr_);
    }
    if (!getSubscriptionIdStrBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, subscriptionIdStr_);
    }
    if (!getSensorPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sensorPath_);
    }
    if (collectionId_ != 0L) {
      output.writeUInt64(4, collectionId_);
    }
    if (collectionStartTime_ != 0L) {
      output.writeUInt64(5, collectionStartTime_);
    }
    if (msgTimestamp_ != 0L) {
      output.writeUInt64(6, msgTimestamp_);
    }
    if (dataGpb_ != null) {
      output.writeMessage(7, getDataGpb());
    }
    if (collectionEndTime_ != 0L) {
      output.writeUInt64(8, collectionEndTime_);
    }
    if (currentPeriod_ != 0) {
      output.writeUInt32(9, currentPeriod_);
    }
    if (!getExceptDescBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, exceptDesc_);
    }
    if (!getProductNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, productName_);
    }
    if (encoding_ != telemetry.Telemetry.Encoding.Encoding_GPB.getNumber()) {
      output.writeEnum(12, encoding_);
    }
    if (!getDataStrBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, dataStr_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNodeIdStrBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeIdStr_);
    }
    if (!getSubscriptionIdStrBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, subscriptionIdStr_);
    }
    if (!getSensorPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sensorPath_);
    }
    if (collectionId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, collectionId_);
    }
    if (collectionStartTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, collectionStartTime_);
    }
    if (msgTimestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, msgTimestamp_);
    }
    if (dataGpb_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getDataGpb());
    }
    if (collectionEndTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, collectionEndTime_);
    }
    if (currentPeriod_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(9, currentPeriod_);
    }
    if (!getExceptDescBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, exceptDesc_);
    }
    if (!getProductNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, productName_);
    }
    if (encoding_ != telemetry.Telemetry.Encoding.Encoding_GPB.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(12, encoding_);
    }
    if (!getDataStrBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, dataStr_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof telemetry.Telemetry)) {
      return super.equals(obj);
    }
    telemetry.Telemetry other = (telemetry.Telemetry) obj;

    boolean result = true;
    result = result && getNodeIdStr()
        .equals(other.getNodeIdStr());
    result = result && getSubscriptionIdStr()
        .equals(other.getSubscriptionIdStr());
    result = result && getSensorPath()
        .equals(other.getSensorPath());
    result = result && (getCollectionId()
        == other.getCollectionId());
    result = result && (getCollectionStartTime()
        == other.getCollectionStartTime());
    result = result && (getMsgTimestamp()
        == other.getMsgTimestamp());
    result = result && (hasDataGpb() == other.hasDataGpb());
    if (hasDataGpb()) {
      result = result && getDataGpb()
          .equals(other.getDataGpb());
    }
    result = result && (getCollectionEndTime()
        == other.getCollectionEndTime());
    result = result && (getCurrentPeriod()
        == other.getCurrentPeriod());
    result = result && getExceptDesc()
        .equals(other.getExceptDesc());
    result = result && getProductName()
        .equals(other.getProductName());
    result = result && encoding_ == other.encoding_;
    result = result && getDataStr()
        .equals(other.getDataStr());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NODE_ID_STR_FIELD_NUMBER;
    hash = (53 * hash) + getNodeIdStr().hashCode();
    hash = (37 * hash) + SUBSCRIPTION_ID_STR_FIELD_NUMBER;
    hash = (53 * hash) + getSubscriptionIdStr().hashCode();
    hash = (37 * hash) + SENSOR_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getSensorPath().hashCode();
    hash = (37 * hash) + COLLECTION_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCollectionId());
    hash = (37 * hash) + COLLECTION_START_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCollectionStartTime());
    hash = (37 * hash) + MSG_TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMsgTimestamp());
    if (hasDataGpb()) {
      hash = (37 * hash) + DATA_GPB_FIELD_NUMBER;
      hash = (53 * hash) + getDataGpb().hashCode();
    }
    hash = (37 * hash) + COLLECTION_END_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCollectionEndTime());
    hash = (37 * hash) + CURRENT_PERIOD_FIELD_NUMBER;
    hash = (53 * hash) + getCurrentPeriod();
    hash = (37 * hash) + EXCEPT_DESC_FIELD_NUMBER;
    hash = (53 * hash) + getExceptDesc().hashCode();
    hash = (37 * hash) + PRODUCT_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getProductName().hashCode();
    hash = (37 * hash) + ENCODING_FIELD_NUMBER;
    hash = (53 * hash) + encoding_;
    hash = (37 * hash) + DATA_STR_FIELD_NUMBER;
    hash = (53 * hash) + getDataStr().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static telemetry.Telemetry parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static telemetry.Telemetry parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static telemetry.Telemetry parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static telemetry.Telemetry parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static telemetry.Telemetry parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static telemetry.Telemetry parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static telemetry.Telemetry parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static telemetry.Telemetry parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static telemetry.Telemetry parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static telemetry.Telemetry parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static telemetry.Telemetry parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static telemetry.Telemetry parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(telemetry.Telemetry prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code helloworld.Telemetry}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:helloworld.Telemetry)
      telemetry.TelemetryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return telemetry.TelemetryProto.internal_static_helloworld_Telemetry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return telemetry.TelemetryProto.internal_static_helloworld_Telemetry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              telemetry.Telemetry.class, telemetry.Telemetry.Builder.class);
    }

    // Construct using telemetry.Telemetry.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      nodeIdStr_ = "";

      subscriptionIdStr_ = "";

      sensorPath_ = "";

      collectionId_ = 0L;

      collectionStartTime_ = 0L;

      msgTimestamp_ = 0L;

      if (dataGpbBuilder_ == null) {
        dataGpb_ = null;
      } else {
        dataGpb_ = null;
        dataGpbBuilder_ = null;
      }
      collectionEndTime_ = 0L;

      currentPeriod_ = 0;

      exceptDesc_ = "";

      productName_ = "";

      encoding_ = 0;

      dataStr_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return telemetry.TelemetryProto.internal_static_helloworld_Telemetry_descriptor;
    }

    public telemetry.Telemetry getDefaultInstanceForType() {
      return telemetry.Telemetry.getDefaultInstance();
    }

    public telemetry.Telemetry build() {
      telemetry.Telemetry result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public telemetry.Telemetry buildPartial() {
      telemetry.Telemetry result = new telemetry.Telemetry(this);
      result.nodeIdStr_ = nodeIdStr_;
      result.subscriptionIdStr_ = subscriptionIdStr_;
      result.sensorPath_ = sensorPath_;
      result.collectionId_ = collectionId_;
      result.collectionStartTime_ = collectionStartTime_;
      result.msgTimestamp_ = msgTimestamp_;
      if (dataGpbBuilder_ == null) {
        result.dataGpb_ = dataGpb_;
      } else {
        result.dataGpb_ = dataGpbBuilder_.build();
      }
      result.collectionEndTime_ = collectionEndTime_;
      result.currentPeriod_ = currentPeriod_;
      result.exceptDesc_ = exceptDesc_;
      result.productName_ = productName_;
      result.encoding_ = encoding_;
      result.dataStr_ = dataStr_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof telemetry.Telemetry) {
        return mergeFrom((telemetry.Telemetry)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(telemetry.Telemetry other) {
      if (other == telemetry.Telemetry.getDefaultInstance()) return this;
      if (!other.getNodeIdStr().isEmpty()) {
        nodeIdStr_ = other.nodeIdStr_;
        onChanged();
      }
      if (!other.getSubscriptionIdStr().isEmpty()) {
        subscriptionIdStr_ = other.subscriptionIdStr_;
        onChanged();
      }
      if (!other.getSensorPath().isEmpty()) {
        sensorPath_ = other.sensorPath_;
        onChanged();
      }
      if (other.getCollectionId() != 0L) {
        setCollectionId(other.getCollectionId());
      }
      if (other.getCollectionStartTime() != 0L) {
        setCollectionStartTime(other.getCollectionStartTime());
      }
      if (other.getMsgTimestamp() != 0L) {
        setMsgTimestamp(other.getMsgTimestamp());
      }
      if (other.hasDataGpb()) {
        mergeDataGpb(other.getDataGpb());
      }
      if (other.getCollectionEndTime() != 0L) {
        setCollectionEndTime(other.getCollectionEndTime());
      }
      if (other.getCurrentPeriod() != 0) {
        setCurrentPeriod(other.getCurrentPeriod());
      }
      if (!other.getExceptDesc().isEmpty()) {
        exceptDesc_ = other.exceptDesc_;
        onChanged();
      }
      if (!other.getProductName().isEmpty()) {
        productName_ = other.productName_;
        onChanged();
      }
      if (other.encoding_ != 0) {
        setEncodingValue(other.getEncodingValue());
      }
      if (!other.getDataStr().isEmpty()) {
        dataStr_ = other.dataStr_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      telemetry.Telemetry parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (telemetry.Telemetry) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object nodeIdStr_ = "";
    /**
     * <pre>
     *Telemetry消息结构定义。
     * </pre>
     *
     * <code>string node_id_str = 1;</code>
     */
    public java.lang.String getNodeIdStr() {
      java.lang.Object ref = nodeIdStr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeIdStr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *Telemetry消息结构定义。
     * </pre>
     *
     * <code>string node_id_str = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdStrBytes() {
      java.lang.Object ref = nodeIdStr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeIdStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *Telemetry消息结构定义。
     * </pre>
     *
     * <code>string node_id_str = 1;</code>
     */
    public Builder setNodeIdStr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nodeIdStr_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *Telemetry消息结构定义。
     * </pre>
     *
     * <code>string node_id_str = 1;</code>
     */
    public Builder clearNodeIdStr() {
      
      nodeIdStr_ = getDefaultInstance().getNodeIdStr();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *Telemetry消息结构定义。
     * </pre>
     *
     * <code>string node_id_str = 1;</code>
     */
    public Builder setNodeIdStrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nodeIdStr_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object subscriptionIdStr_ = "";
    /**
     * <pre>
     *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
     * </pre>
     *
     * <code>string subscription_id_str = 2;</code>
     */
    public java.lang.String getSubscriptionIdStr() {
      java.lang.Object ref = subscriptionIdStr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subscriptionIdStr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
     * </pre>
     *
     * <code>string subscription_id_str = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSubscriptionIdStrBytes() {
      java.lang.Object ref = subscriptionIdStr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subscriptionIdStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
     * </pre>
     *
     * <code>string subscription_id_str = 2;</code>
     */
    public Builder setSubscriptionIdStr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      subscriptionIdStr_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
     * </pre>
     *
     * <code>string subscription_id_str = 2;</code>
     */
    public Builder clearSubscriptionIdStr() {
      
      subscriptionIdStr_ = getDefaultInstance().getSubscriptionIdStr();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *订阅名称，静态配置订阅时的订阅名称，GPB编码时编码为2。
     * </pre>
     *
     * <code>string subscription_id_str = 2;</code>
     */
    public Builder setSubscriptionIdStrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      subscriptionIdStr_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object sensorPath_ = "";
    /**
     * <pre>
     *订阅路径，GPB编码时编码为3。
     * </pre>
     *
     * <code>string sensor_path = 3;</code>
     */
    public java.lang.String getSensorPath() {
      java.lang.Object ref = sensorPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sensorPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *订阅路径，GPB编码时编码为3。
     * </pre>
     *
     * <code>string sensor_path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSensorPathBytes() {
      java.lang.Object ref = sensorPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *订阅路径，GPB编码时编码为3。
     * </pre>
     *
     * <code>string sensor_path = 3;</code>
     */
    public Builder setSensorPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sensorPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *订阅路径，GPB编码时编码为3。
     * </pre>
     *
     * <code>string sensor_path = 3;</code>
     */
    public Builder clearSensorPath() {
      
      sensorPath_ = getDefaultInstance().getSensorPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *订阅路径，GPB编码时编码为3。
     * </pre>
     *
     * <code>string sensor_path = 3;</code>
     */
    public Builder setSensorPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sensorPath_ = value;
      onChanged();
      return this;
    }

    private long collectionId_ ;
    /**
     * <pre>
     *标识采样轮次，GPB编码时编码为4。
     * </pre>
     *
     * <code>uint64 collection_id = 4;</code>
     */
    public long getCollectionId() {
      return collectionId_;
    }
    /**
     * <pre>
     *标识采样轮次，GPB编码时编码为4。
     * </pre>
     *
     * <code>uint64 collection_id = 4;</code>
     */
    public Builder setCollectionId(long value) {
      
      collectionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *标识采样轮次，GPB编码时编码为4。
     * </pre>
     *
     * <code>uint64 collection_id = 4;</code>
     */
    public Builder clearCollectionId() {
      
      collectionId_ = 0L;
      onChanged();
      return this;
    }

    private long collectionStartTime_ ;
    /**
     * <pre>
     *标识采样轮次开始时间，GPB编码时编码为5。
     * </pre>
     *
     * <code>uint64 collection_start_time = 5;</code>
     */
    public long getCollectionStartTime() {
      return collectionStartTime_;
    }
    /**
     * <pre>
     *标识采样轮次开始时间，GPB编码时编码为5。
     * </pre>
     *
     * <code>uint64 collection_start_time = 5;</code>
     */
    public Builder setCollectionStartTime(long value) {
      
      collectionStartTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *标识采样轮次开始时间，GPB编码时编码为5。
     * </pre>
     *
     * <code>uint64 collection_start_time = 5;</code>
     */
    public Builder clearCollectionStartTime() {
      
      collectionStartTime_ = 0L;
      onChanged();
      return this;
    }

    private long msgTimestamp_ ;
    /**
     * <pre>
     *生成本消息的时间戳，GPB编码时编码为6。
     * </pre>
     *
     * <code>uint64 msg_timestamp = 6;</code>
     */
    public long getMsgTimestamp() {
      return msgTimestamp_;
    }
    /**
     * <pre>
     *生成本消息的时间戳，GPB编码时编码为6。
     * </pre>
     *
     * <code>uint64 msg_timestamp = 6;</code>
     */
    public Builder setMsgTimestamp(long value) {
      
      msgTimestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *生成本消息的时间戳，GPB编码时编码为6。
     * </pre>
     *
     * <code>uint64 msg_timestamp = 6;</code>
     */
    public Builder clearMsgTimestamp() {
      
      msgTimestamp_ = 0L;
      onChanged();
      return this;
    }

    private telemetry.TelemetryGPBTable dataGpb_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        telemetry.TelemetryGPBTable, telemetry.TelemetryGPBTable.Builder, telemetry.TelemetryGPBTableOrBuilder> dataGpbBuilder_;
    /**
     * <pre>
     *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
     */
    public boolean hasDataGpb() {
      return dataGpbBuilder_ != null || dataGpb_ != null;
    }
    /**
     * <pre>
     *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
     */
    public telemetry.TelemetryGPBTable getDataGpb() {
      if (dataGpbBuilder_ == null) {
        return dataGpb_ == null ? telemetry.TelemetryGPBTable.getDefaultInstance() : dataGpb_;
      } else {
        return dataGpbBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
     */
    public Builder setDataGpb(telemetry.TelemetryGPBTable value) {
      if (dataGpbBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dataGpb_ = value;
        onChanged();
      } else {
        dataGpbBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
     */
    public Builder setDataGpb(
        telemetry.TelemetryGPBTable.Builder builderForValue) {
      if (dataGpbBuilder_ == null) {
        dataGpb_ = builderForValue.build();
        onChanged();
      } else {
        dataGpbBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
     */
    public Builder mergeDataGpb(telemetry.TelemetryGPBTable value) {
      if (dataGpbBuilder_ == null) {
        if (dataGpb_ != null) {
          dataGpb_ =
            telemetry.TelemetryGPBTable.newBuilder(dataGpb_).mergeFrom(value).buildPartial();
        } else {
          dataGpb_ = value;
        }
        onChanged();
      } else {
        dataGpbBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
     */
    public Builder clearDataGpb() {
      if (dataGpbBuilder_ == null) {
        dataGpb_ = null;
        onChanged();
      } else {
        dataGpb_ = null;
        dataGpbBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
     */
    public telemetry.TelemetryGPBTable.Builder getDataGpbBuilder() {
      
      onChanged();
      return getDataGpbFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
     */
    public telemetry.TelemetryGPBTableOrBuilder getDataGpbOrBuilder() {
      if (dataGpbBuilder_ != null) {
        return dataGpbBuilder_.getMessageOrBuilder();
      } else {
        return dataGpb_ == null ?
            telemetry.TelemetryGPBTable.getDefaultInstance() : dataGpb_;
      }
    }
    /**
     * <pre>
     *承载的数据由TelemetryGPBTable定义，GPB编码时编码为7。
     * </pre>
     *
     * <code>.helloworld.TelemetryGPBTable data_gpb = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        telemetry.TelemetryGPBTable, telemetry.TelemetryGPBTable.Builder, telemetry.TelemetryGPBTableOrBuilder> 
        getDataGpbFieldBuilder() {
      if (dataGpbBuilder_ == null) {
        dataGpbBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            telemetry.TelemetryGPBTable, telemetry.TelemetryGPBTable.Builder, telemetry.TelemetryGPBTableOrBuilder>(
                getDataGpb(),
                getParentForChildren(),
                isClean());
        dataGpb_ = null;
      }
      return dataGpbBuilder_;
    }

    private long collectionEndTime_ ;
    /**
     * <pre>
     *标识采样轮次结束时间，GPB编码时编码为8。
     * </pre>
     *
     * <code>uint64 collection_end_time = 8;</code>
     */
    public long getCollectionEndTime() {
      return collectionEndTime_;
    }
    /**
     * <pre>
     *标识采样轮次结束时间，GPB编码时编码为8。
     * </pre>
     *
     * <code>uint64 collection_end_time = 8;</code>
     */
    public Builder setCollectionEndTime(long value) {
      
      collectionEndTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *标识采样轮次结束时间，GPB编码时编码为8。
     * </pre>
     *
     * <code>uint64 collection_end_time = 8;</code>
     */
    public Builder clearCollectionEndTime() {
      
      collectionEndTime_ = 0L;
      onChanged();
      return this;
    }

    private int currentPeriod_ ;
    /**
     * <pre>
     *采样精度，单位是毫秒，GPB编码时编码为9。
     * </pre>
     *
     * <code>uint32 current_period = 9;</code>
     */
    public int getCurrentPeriod() {
      return currentPeriod_;
    }
    /**
     * <pre>
     *采样精度，单位是毫秒，GPB编码时编码为9。
     * </pre>
     *
     * <code>uint32 current_period = 9;</code>
     */
    public Builder setCurrentPeriod(int value) {
      
      currentPeriod_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *采样精度，单位是毫秒，GPB编码时编码为9。
     * </pre>
     *
     * <code>uint32 current_period = 9;</code>
     */
    public Builder clearCurrentPeriod() {
      
      currentPeriod_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object exceptDesc_ = "";
    /**
     * <pre>
     *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
     * </pre>
     *
     * <code>string except_desc = 10;</code>
     */
    public java.lang.String getExceptDesc() {
      java.lang.Object ref = exceptDesc_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exceptDesc_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
     * </pre>
     *
     * <code>string except_desc = 10;</code>
     */
    public com.google.protobuf.ByteString
        getExceptDescBytes() {
      java.lang.Object ref = exceptDesc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exceptDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
     * </pre>
     *
     * <code>string except_desc = 10;</code>
     */
    public Builder setExceptDesc(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      exceptDesc_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
     * </pre>
     *
     * <code>string except_desc = 10;</code>
     */
    public Builder clearExceptDesc() {
      
      exceptDesc_ = getDefaultInstance().getExceptDesc();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *异常描述信息，采样异常时用于上报异常信息，GPB编码时编码为10。
     * </pre>
     *
     * <code>string except_desc = 10;</code>
     */
    public Builder setExceptDescBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      exceptDesc_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object productName_ = "";
    /**
     * <pre>
     *产品名称。
     * </pre>
     *
     * <code>string product_name = 11;</code>
     */
    public java.lang.String getProductName() {
      java.lang.Object ref = productName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        productName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *产品名称。
     * </pre>
     *
     * <code>string product_name = 11;</code>
     */
    public com.google.protobuf.ByteString
        getProductNameBytes() {
      java.lang.Object ref = productName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        productName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *产品名称。
     * </pre>
     *
     * <code>string product_name = 11;</code>
     */
    public Builder setProductName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      productName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *产品名称。
     * </pre>
     *
     * <code>string product_name = 11;</code>
     */
    public Builder clearProductName() {
      
      productName_ = getDefaultInstance().getProductName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *产品名称。
     * </pre>
     *
     * <code>string product_name = 11;</code>
     */
    public Builder setProductNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      productName_ = value;
      onChanged();
      return this;
    }

    private int encoding_ = 0;
    /**
     * <pre>
     *数据编码格式。为GPB时，data_gpb字段有效，否则data_str字段有效。
     * </pre>
     *
     * <code>.helloworld.Telemetry.Encoding encoding = 12;</code>
     */
    public int getEncodingValue() {
      return encoding_;
    }
    /**
     * <pre>
     *数据编码格式。为GPB时，data_gpb字段有效，否则data_str字段有效。
     * </pre>
     *
     * <code>.helloworld.Telemetry.Encoding encoding = 12;</code>
     */
    public Builder setEncodingValue(int value) {
      encoding_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *数据编码格式。为GPB时，data_gpb字段有效，否则data_str字段有效。
     * </pre>
     *
     * <code>.helloworld.Telemetry.Encoding encoding = 12;</code>
     */
    public telemetry.Telemetry.Encoding getEncoding() {
      telemetry.Telemetry.Encoding result = telemetry.Telemetry.Encoding.valueOf(encoding_);
      return result == null ? telemetry.Telemetry.Encoding.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *数据编码格式。为GPB时，data_gpb字段有效，否则data_str字段有效。
     * </pre>
     *
     * <code>.helloworld.Telemetry.Encoding encoding = 12;</code>
     */
    public Builder setEncoding(telemetry.Telemetry.Encoding value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      encoding_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *数据编码格式。为GPB时，data_gpb字段有效，否则data_str字段有效。
     * </pre>
     *
     * <code>.helloworld.Telemetry.Encoding encoding = 12;</code>
     */
    public Builder clearEncoding() {
      
      encoding_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object dataStr_ = "";
    /**
     * <pre>
     * 数据编码非GPB时有效，否则为空。
     * </pre>
     *
     * <code>string data_str = 14;</code>
     */
    public java.lang.String getDataStr() {
      java.lang.Object ref = dataStr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataStr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 数据编码非GPB时有效，否则为空。
     * </pre>
     *
     * <code>string data_str = 14;</code>
     */
    public com.google.protobuf.ByteString
        getDataStrBytes() {
      java.lang.Object ref = dataStr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 数据编码非GPB时有效，否则为空。
     * </pre>
     *
     * <code>string data_str = 14;</code>
     */
    public Builder setDataStr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dataStr_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 数据编码非GPB时有效，否则为空。
     * </pre>
     *
     * <code>string data_str = 14;</code>
     */
    public Builder clearDataStr() {
      
      dataStr_ = getDefaultInstance().getDataStr();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 数据编码非GPB时有效，否则为空。
     * </pre>
     *
     * <code>string data_str = 14;</code>
     */
    public Builder setDataStrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dataStr_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:helloworld.Telemetry)
  }

  // @@protoc_insertion_point(class_scope:helloworld.Telemetry)
  private static final telemetry.Telemetry DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new telemetry.Telemetry();
  }

  public static telemetry.Telemetry getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Telemetry>
      PARSER = new com.google.protobuf.AbstractParser<Telemetry>() {
    public Telemetry parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Telemetry(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Telemetry> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Telemetry> getParserForType() {
    return PARSER;
  }

  public telemetry.Telemetry getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

